name: 'Setup Env Bootstrap'
description: 'Install and configure Env on the runner'
inputs:
  golang:
    default: '1.23'
    description: 'Version of Go to install'
    required: false
  python:
    default: '3.12'
    description: 'Version of Python to install'
    required: false
  nodejs:
    default: '20'
    description: 'Version of Node.js to install'
    required: false
  java:
    default: '21'
    description: 'Version of Java to install'
    required: false
  rust:
    default: '1.88.0'
    description: 'Version of Rust to install'
    required: false
  gradle:
    default: '6.6.1'
    description: 'Version of Gradle to install'
    required: false
  maven:
    default: '3.3.8'
    description: 'Version of Maven to install'
    required: false
  pnpm:
    default: '9.6.7'
    description: 'Version of pnpm to install'
    required: false
  cnpm:
    default: '9.2.0'
    description: 'Version of cnpm to install'
    required: false
runs:
  using: "composite"
  steps:
    - name: Setup env
      shell: bash
      run: |
        $GITHUB_WORKSPACE/scripts/env-init.sh

    - name: Setup by inputs
      shell: bash
      run: |
        set -x
        if [ -n "${{ inputs.golang }}" ]; then
          go install golang.org/dl/go@${{ inputs.golang }} && go download go@${{ inputs.golang }}
        fi
        if [ -n "${{ inputs.python }}" ]; then
          pyenv install ${{ inputs.python }} && pyenv global ${{ inputs.python }}
        fi
        if [ -n "${{ inputs.nodejs }}" ]; then
          nvm install ${{ inputs.nodejs }} && nvm use ${{ inputs.nodejs }}
        fi
        if [ -n "${{ inputs.java }}" ]; then
          sdk install java ${{ inputs.java }}
        fi
        if [ -n "${{ inputs.rust }}" ]; then
          rustup install ${{ inputs.rust }} && rustup default ${{ inputs.rust }}
        fi
        if [ -n "${{ inputs.gradle }}" ]; then
          sdk install gradle ${{ inputs.gradle }}
        fi
        if [ -n "${{ inputs.maven }}" ]; then
          sdk install maven ${{ inputs.maven }}
        fi
        if [ -n "${{ inputs.pnpm }}" ]; then
          npm install -g pnpm@${{ inputs.pnpm }}
        fi
        if [ -n "${{ inputs.cnpm }}" ]; then
          npm install -g cnpm@${{ inputs.cnpm }}
        fi