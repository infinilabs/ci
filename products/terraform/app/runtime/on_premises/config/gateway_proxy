env:
  NODE_ID:
  NODE_ENDPOINT:
  TENANT_ID:
  GROUP_ID:
  CONFIG_SERVER:
  K8S_CLUSTER:
  K8S_NAMESPACE:
  K8S_CLUSTER_ID:

path.data: /app/data
path.logs: /app/log
path.configs: /app/config # directory of additional gateway configurations
configs.auto_reload: true # set true to auto reload gateway configurations

node:
  id: $[[env.NODE_ID]]
  labels:
    endpoint: $[[env.NODE_ENDPOINT]]
    tenant_id: $[[env.TENANT_ID]]
    group_id: $[[env.GROUP_ID]]
    k8s_cluster_id: $[[env.K8S_CLUSTER_ID]]

configs:
  #for managed client's setting
  managed: true # managed by remote servers
  panic_on_config_error: false #ignore config error
  interval: "10s"
  servers: # config servers
    - $[[env.CONFIG_SERVER]]
  soft_delete: false
  max_backup_files: 5
  tls: #for mTLS connection with config servers
    enabled: false
    cert_file: "config/client.crt"
    key_file: "config/client.key"
    ca_file: "config/ca.crt"
    skip_insecure_verify: false

entry:
  - name: gateway_proxy
    enabled: true
    router: my_router
    network:
      binding: 0.0.0.0:8000
    tls:
      enabled: false

api:
  enabled: true
  network:
    binding: 0.0.0.0:2900
  security:
    enabled: false
    username: admin
    password: $[[keystore.API_PASS]]

router:
  - name: my_router
    default_flow: default_flow

flow:
  - name: default_flow
    filter:
      - context_parse:
          context: _ctx.request.host
          pattern: ^(?P<service>((easysearch|runtime|gateway)-[a-z0-9-]*|superset)).*?
          group: "parsed_index"
      - wildcard_domain:
          when:
            contains:
              parsed_index.service: "runtime"
          schema: "http" #https or http
          max_idle_conn_duration: "900s"
          suffix: $[[parsed_index.service]].$[[env.K8S_NAMESPACE]]
          domain: "svc.$[[env.K8S_CLUSTER]]:2900"
      - wildcard_domain:
          when:
            contains:
              parsed_index.service: "gateway"
          schema: "http" #https or http
          max_idle_conn_duration: "900s"
          suffix: $[[parsed_index.service]].$[[env.K8S_NAMESPACE]]
          domain: "svc.$[[env.K8S_CLUSTER]]:2900"
      - wildcard_domain:
          when:
            contains:
              parsed_index.service: "easysearch"
          schema: "https" #https or http
          max_idle_conn_duration: "900s"
          suffix: $[[parsed_index.service]].$[[env.K8S_NAMESPACE]]
          domain: "svc.$[[env.K8S_CLUSTER]]:9200"
      - wildcard_domain:
          when:
            contains:
              parsed_index.service: "superset"
          schema: "http" #https or http
          max_idle_conn_duration: "900s"
          suffix: $[[parsed_index.service]].$[[env.K8S_NAMESPACE]]
          domain: "svc.$[[env.K8S_CLUSTER]]:8088"