name: Publish Operator Docker Image

defaults:
  run:
    shell: bash

env:
  TZ: Asia/Shanghai

on:
  schedule:
    - cron: '30 16 * * *'
  workflow_dispatch:
    inputs:
      PUBLISH_COMPONENTS:
        description: 'Comma-separated list of components to publish (e.g. easysearch,runtime)'
        required: true
        default: 'easysearch,runtime'
      PUBLISH_VERSIOIN:
        description: 'Publish docker image tag'
        required: true
        default: "1.0.25"
      PUBLISH_RELEASE:
        description: 'Publish release'
        type: boolean
        required: false
        default: false

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.set-components.outputs.components }}
    steps:
      - name: Set components for build
        id: set-components
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            COMPONENTS="${{ inputs.PUBLISH_COMPONENTS }}"
          else
            COMPONENTS="easysearch,runtime"
          fi
          echo "components=$(echo $COMPONENTS | jq -R 'split(",")')" >> $GITHUB_OUTPUT

  publish:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.setup.outputs.components) }}

    env:
      LOCAL_PORT: ${{ vars.LOCAL_PORT }}
      SSH_GIT_REPO: ${{ secrets.SSH_GIT_REPO }}
      SSH_GITHUB_REPO: ${{ secrets.SSH_GITHUB_REPO }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
      CONNECT_SERVER: ${{ secrets.CONNECT_SERVER }}
      CONNECT_PORT: ${{ secrets.CONNECT_PORT }}
      CONNECT_KEY: ${{ secrets.CONNECT_KEY }}
      CONNECT_TIMEOUT: ${{ vars.CONNECT_TIMEOUT }}
      CONNECT_MODE: ${{ vars.CONNECT_MODE }}
      CONNECT_METHOD: ${{ secrets.CONNECT_METHOD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up and check env
        run: |
          if [[ "${{ matrix.component }}" == "easysearch" ]]; then
            echo PNAME=k8s-operator >> $GITHUB_ENV
            echo TNAME=easysearch-operator >> $GITHUB_ENV
          elif [[ "${{ matrix.component }}" == "runtime" ]]; then
            echo PNAME=runtime-operator >> $GITHUB_ENV
            echo TNAME=runtime-operator >> $GITHUB_ENV
          fi

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            RUN_NUMBER=${{ github.run_number }}
            OFFSET=${{ vars.OFFSET }}
            BUILD_NUMBER=$((RUN_NUMBER + OFFSET))
            echo TAG="${{ inputs.PUBLISH_VERSIOIN }}-$BUILD_NUMBER" >> $GITHUB_ENV
          else
            BUILD_NUMBER="NIGHTLY-$(date +%Y%m%d)"
            echo TAG="${{ vars.PUBLISH_OPERATOR_VERSION }}_$BUILD_NUMBER" >> $GITHUB_ENV
          fi
          cat $GITHUB_ENV

      - name: Run connect in background (easysearch only)
        if: matrix.component == 'easysearch'
        run: |
          connect -c "$GITHUB_WORKSPACE/.oss.json" >/dev/null 2>&1 &
          echo "Connect started with pid $!"
          sleep 15

      - name: Checkout component repo
        run: |
          if [[ "${{ matrix.component }}" == "easysearch" ]]; then
            git clone $SSH_GIT_REPO/$PNAME $GITHUB_WORKSPACE/$PNAME
          elif [[ "${{ matrix.component }}" == "runtime" ]]; then
            git clone $SSH_GITHUB_REPO/$PNAME $GITHUB_WORKSPACE/$PNAME
          fi

      - name: Set up qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set REPO_NAME
        run: |
          echo REPO_NAME=${{ vars.DOCKER_REPO }}/${{ env.TNAME }} >> $GITHUB_ENV
          cat $GITHUB_ENV

      - name: Run Make to Build and Push
        working-directory: ${{ github.workspace }}/${{ env.PNAME }}
        env:
          BUILDX_NO_DEFAULT_ATTESTATIONS: 1
        run: make docker-buildx PLATFORMS="linux/amd64,linux/arm64" IMG="$REPO_NAME:$TAG"

      - name: Update GitHub release version
        if: ${{ inputs.PUBLISH_RELEASE == 'true' }}
        run: |
          gh variable set PUBLISH_OPERATOR_VERSION --body "${{ inputs.PUBLISH_VERSIOIN }}"

  notify_on_failure:
    runs-on: ubuntu-latest
    needs: [setup, publish]
    if: failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Send Feishu Notification on Failure
        env:
          FEISHU_BOT_URL: ${{ secrets.FEISHU_BOT_WEBHOOK_URL }}
          REPO_NAME: ${{ github.repository }}
          WORKFLOW_NAME: ${{ github.workflow }}
          RUN_ID: ${{ github.run_id }}
          ACTOR: ${{ github.triggering_actor }}
          SERVER_URL: ${{ github.server_url }}
        run: $GITHUB_WORKSPACE/scripts/feishu_message.sh
