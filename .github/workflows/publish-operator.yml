name: Publish Operator Docker Image
defaults:
  run:
    shell: bash
env:
  TZ: Asia/Shanghai
  
on:
  workflow_dispatch:
    inputs:
      PUBLISH_TAG:
        description: 'Publish easysearch operator tag'
        required: true
        default: "1.0.25"
      PUBLISH_COMPONENT:
        description: 'Publish component'
        required: true
        type: choice
        options: [easysearch, runtime]

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      LOCAL_PORT: ${{ vars.LOCAL_PORT }}
      SSH_GIT_REPO: ${{ secrets.SSH_GIT_REPO }}
      SSH_GITHUB_REPO: ${{ secrets.SSH_GITHUB_REPO }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
      CONNECT_SERVER: ${{ secrets.CONNECT_SERVER }}
      CONNECT_PORT: ${{ secrets.CONNECT_PORT }}
      CONNECT_KEY: ${{ secrets.CONNECT_KEY }}
      CONNECT_TIMEOUT: ${{ vars.CONNECT_TIMEOUT }}
      CONNECT_MODE: ${{ vars.CONNECT_MODE }}
      CONNECT_METHOD: ${{ secrets.CONNECT_METHOD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up env
        run: |
          if [[ "${{ inputs.PUBLISH_COMPONENT }}" == "easysearch" ]]; then
            echo PNAME="k8s-operator" >> $GITHUB_ENV
            echo TNAME=easysearch-operator >> $GITHUB_ENV
          elif [[ "${{ inputs.PUBLISH_COMPONENT }}" == "runtime" ]]; then
            echo PNAME="runtime-operator" >> $GITHUB_ENV
            echo TNAME=runtime-operator >> $GITHUB_ENV
          else
            echo "Invalid component specified
          fi
          RUN_NUMBER=${{ github.run_number }}
          OFFSET=${{ vars.OFFSET }}
          BUILD_NUMBER=$((RUN_NUMBER + OFFSET))

          echo TAG="${{ inputs.PUBLISH_TAG }}-$BUILD_NUMBER" >> $GITHUB_ENV

          cat $GITHUB_ENV

      - name: Set up and check env
        if: ${{ inputs.PUBLISH_COMPONENT == 'easysearch' }}
        run: |
          $GITHUB_WORKSPACE/scripts/env-init.sh

      - name: Run connect in background
        if: ${{ inputs.PUBLISH_COMPONENT == 'easysearch' }}
        run: |
          connect -c "$GITHUB_WORKSPACE/.oss.json" >/dev/null 2>&1 &
          echo "Connect started with pid $!"
          sleep 15

      - name: Checkout ${{ env.PNAME }} repo
        if: ${{ inputs.PUBLISH_COMPONENT == 'easysearch' }}
        run: |
          git clone $SSH_GIT_REPO/$PNAME $GITHUB_WORKSPACE/$PNAME

      - name: Checkout ${{ env.TNAME }} repo
        if: ${{ inputs.PUBLISH_COMPONENT == 'runtime' }}
        run: |
          git clone $SSH_GITHUB_REPO/$TNAME $GITHUB_WORKSPACE/$TNAME

      - name: Set up qemu with ${{ env.PNAME }}
        uses: docker/setup-qemu-action@v3

      - name: Set up docker buildx with ${{ env.PNAME }}
        uses: docker/setup-buildx-action@v3
        #with:
        #  buildkitd-flags: --debug

      - name: Login to dockerhub with ${{ env.PNAME }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build meta with ${{ env.PNAME }}
        run: |
          echo REPO_NAME=${{ vars.DOCKER_REPO }}/${{ env.TNAME }} >> $GITHUB_ENV
          cat $GITHUB_ENV

      - name: Run Make to Build and Push
        working-directory: ${{ github.workspace }}/${{ env.PNAME }}
        env:
          BUILDX_NO_DEFAULT_ATTESTATIONS: 1
        run: make docker-buildx PLATFORMS="linux/amd64,linux/arm64" IMG="$REPO_NAME:$TAG"

  notify_on_failure:
    runs-on: ubuntu-latest
    needs: [publish]
    if: failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Send Feishu Notification on Failure
        env:
          FEISHU_BOT_URL: ${{ secrets.FEISHU_BOT_WEBHOOK_URL }}
          REPO_NAME: ${{ github.repository }}
          WORKFLOW_NAME: ${{ github.workflow }}
          RUN_ID: ${{ github.run_id }}
          ACTOR: ${{ github.triggering_actor }}
          SERVER_URL: ${{ github.server_url }}
        run: $GITHUB_WORKSPACE/scripts/feishu_message.sh